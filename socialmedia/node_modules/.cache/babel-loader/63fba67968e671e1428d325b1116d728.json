{"ast":null,"code":"var _jsxFileName = \"D:\\\\Vrundan\\\\AT_Project\\\\socialmedia\\\\src\\\\Components\\\\Messenger.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport NavbarHome from './NavbarHome';\nimport Conversation from './Conversation';\nimport Message from './Message';\nimport ChatOnline from './ChatOnline';\nimport './messenger.css';\nimport { Button } from '@material-ui/core';\nimport { Context } from '../context/Context';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Messenger = () => {\n  _s();\n\n  const [conversations, setconversations] = useState([]);\n  const [currChat, setCurrChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newmessages, setNewMessages] = useState(\"\");\n  const [arrivalmessages, setArrivalmessages] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState(null);\n  const {\n    user,\n    dispatch\n  } = useContext(Context);\n  const scrollRef = useRef();\n  const socket = useRef();\n  const [onlinefriend, setOnlinefriend] = useState([]);\n  useEffect(() => {\n    setOnlinefriend(user.friends.filter(f => onlineUsers.includes(f._id)));\n  }, [onlineUsers]);\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", data => {\n      setArrivalmessages({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, []);\n  useEffect(() => {\n    // console.log(\"vrunadn\");\n    arrivalmessages && currChat.members.includes(arrivalmessages.sender) && setMessages([...messages, arrivalmessages]);\n  }, [arrivalmessages, currChat]);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUser\", users => {\n      console.log(users);\n      setOnlineUsers(users);\n    });\n  }, [user]);\n  useEffect(() => {\n    const getconversation = async () => {\n      try {\n        const conver = await axios.get(`/conversation/${user._id}`); // console.log(conver)\n        // console.log(user)\n\n        setconversations(conver.data);\n      } catch (err) {\n        console.log(err.Message);\n      }\n    };\n\n    getconversation();\n  }, [user._id]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        // console.log(\"vrundan\")\n        const fetchmessages = await axios.get(`/message/${currChat === null || currChat === void 0 ? void 0 : currChat._id}`); // console.log(fetchmessages.data)\n\n        setMessages(fetchmessages.data);\n      } catch (err) {\n        console.log(err.Message);\n      }\n    };\n\n    getMessages();\n  }, [currChat]);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const currmessage = {\n      sender: user._id,\n      text: newmessages,\n      conversationId: currChat._id\n    };\n    const receiverId = currChat.members.find(member => member !== user._id);\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newmessages\n    });\n\n    try {\n      const res = await axios.post(\"/message\", currmessage);\n      setMessages([...messages, res.data]);\n      setNewMessages(\"\");\n    } catch (err) {\n      console.log(err.Message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarHome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search User...\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), conversations.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCurrChat(e),\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              conversation: e,\n              currUser: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  message: m,\n                  own: m.sender === user._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Write Something ....\",\n                onChange: e => setNewMessages(e.target.value),\n                value: newmessages,\n                className: \"chatMessageInput\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleSubmit,\n                children: \" Send \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversation\",\n            children: \"Start the conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(ChatOnline, {\n            onlineuser: onlineUsers,\n            setcurrChat: setCurrChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Messenger, \"zx9LVquI0EmpMG0PvH90HrzDSps=\");\n\n_c = Messenger;\nexport default Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["D:/Vrundan/AT_Project/socialmedia/src/Components/Messenger.js"],"names":["React","useState","useEffect","useContext","useRef","NavbarHome","Conversation","Message","ChatOnline","Button","Context","axios","io","Messenger","conversations","setconversations","currChat","setCurrChat","messages","setMessages","newmessages","setNewMessages","arrivalmessages","setArrivalmessages","onlineUsers","setOnlineUsers","user","dispatch","scrollRef","socket","onlinefriend","setOnlinefriend","friends","filter","f","includes","_id","current","on","data","sender","senderId","text","createdAt","Date","now","members","emit","users","console","log","getconversation","conver","get","err","getMessages","fetchmessages","scrollIntoView","behavior","handleSubmit","e","preventDefault","currmessage","conversationId","receiverId","find","member","res","post","map","m","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useContext,useRef} from 'react'\r\nimport NavbarHome from './NavbarHome'\r\nimport Conversation from './Conversation'\r\nimport Message from './Message'\r\nimport ChatOnline from './ChatOnline'\r\nimport './messenger.css'\r\nimport { Button } from '@material-ui/core'\r\nimport { Context } from '../context/Context'\r\nimport axios from 'axios'\r\nimport {io} from 'socket.io-client'\r\n\r\n\r\nconst Messenger = () => {\r\n\r\n    const [conversations, setconversations] = useState([])\r\n    const [currChat, setCurrChat] = useState(null)\r\n    const [messages, setMessages] = useState([])\r\n    const [newmessages,setNewMessages] = useState(\"\")\r\n    const [arrivalmessages, setArrivalmessages] = useState(null)\r\n    const [onlineUsers, setOnlineUsers] = useState(null)\r\n\r\n    const { user, dispatch } = useContext(Context);\r\n    const scrollRef = useRef()\r\n    const socket = useRef()\r\n\r\n    const [onlinefriend, setOnlinefriend] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        setOnlinefriend(user.friends.filter((f)=>onlineUsers.includes(f._id)))        \r\n    }, [onlineUsers])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        socket.current = io(\"ws://localhost:8900\");\r\n        socket.current.on(\"getMessage\",(data)=>{\r\n            setArrivalmessages({\r\n                sender:data.senderId,\r\n                text:data.text,\r\n                createdAt:Date.now(),\r\n            })\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        // console.log(\"vrunadn\");\r\n        arrivalmessages \r\n        && currChat.members.includes(arrivalmessages.sender) \r\n        && setMessages([...messages,arrivalmessages])\r\n    },[arrivalmessages,currChat])\r\n\r\n    useEffect(() => {\r\n        socket.current.emit(\"addUser\",user._id);\r\n        socket.current.on(\"getUser\",(users)=>{\r\n            console.log(users)\r\n            setOnlineUsers(users)\r\n        })\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        const getconversation = async() => {\r\n            try {\r\n                const conver = await axios.get(`/conversation/${user._id}`)\r\n                // console.log(conver)\r\n                // console.log(user)\r\n                setconversations(conver.data)\r\n            } catch (err) {\r\n                console.log(err.Message)\r\n            }\r\n        }\r\n        getconversation()\r\n    }, [user._id])\r\n\r\n    useEffect(() => {\r\n        const getMessages = async() =>{\r\n            try{\r\n                // console.log(\"vrundan\")\r\n                const fetchmessages = await axios.get(`/message/${currChat?._id}`)\r\n                // console.log(fetchmessages.data)\r\n                setMessages(fetchmessages.data)\r\n            }catch(err){\r\n                console.log(err.Message)\r\n            }\r\n        }\r\n        getMessages()\r\n    }, [currChat])\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({behavior:\"smooth\"})\r\n    }, [messages])\r\n\r\n    const handleSubmit = async(e) =>{\r\n        e.preventDefault()\r\n        const currmessage={\r\n            sender : user._id,\r\n            text:newmessages,\r\n            conversationId:currChat._id\r\n        }\r\n        const receiverId = currChat.members.find(member=>member !== user._id)\r\n        socket.current.emit(\"sendMessage\",{\r\n            senderId:user._id,\r\n            receiverId,\r\n            text:newmessages,\r\n        })\r\n\r\n        try {\r\n            const res = await axios.post(\"/message\",currmessage)\r\n            setMessages([...messages,res.data])\r\n            setNewMessages(\"\")\r\n        } catch (err) {\r\n            console.log(err.Message)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavbarHome />\r\n            <div className=\"messenger\">\r\n                <div className=\"chatMenu\">\r\n                    <div className=\"chatMenuWrapper\">\r\n                        <input placeholder=\"Search User...\" className=\"chatMenuInput\" ></input>\r\n                        {conversations.map((e)=>(\r\n                            <div onClick={()=>setCurrChat(e)}>\r\n                                <Conversation conversation={e} currUser={user} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"chatBox\">\r\n                    <div className=\"chatBoxWrapper\">\r\n                    { currChat ? \r\n                        <>\r\n                        <div className=\"chatBoxTop\">\r\n                        {messages.map((m)=>(\r\n                            <div ref = {scrollRef}>\r\n                            <Message message={m} own={m.sender === user._id}/>\r\n                            </div>\r\n                        ))}\r\n                            \r\n                        </div>\r\n                        <div className=\"chatBoxBottom\">\r\n                            <textarea placeholder=\"Write Something ....\" onChange={(e)=>setNewMessages(e.target.value)} value={newmessages} className=\"chatMessageInput\"></textarea>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} > Send </Button>\r\n                        </div> \r\n                        </>: <span className=\"noConversation\">Start the conversation</span>\r\n                    }\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"chatOnline\">\r\n                    <div className=\"chatOnlineWrapper\">\r\n                        {\r\n                            <ChatOnline onlineuser={onlineUsers} setcurrChat={setCurrChat}/>\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Messenger\r\n"]},"metadata":{},"sourceType":"module"}